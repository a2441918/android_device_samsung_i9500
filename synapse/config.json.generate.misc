#!/system/xbin/busybox sh

cat << CTAG
{
	name:Miscellaneous,
		elements:[
			`if [ -f "/sys/kernel/mm/ksm/run" ]; then
			KSM=\`$BB cat /sys/kernel/mm/ksm/run\`
			PTS=\`$BB cat /sys/kernel/mm/ksm/pages_to_scan\`
			SLEEP=\`$BB cat /sys/kernel/mm/ksm/sleep_millisecs\`
				$BB echo '{ SPane:{
					title:"Kernel Samepage Merging"
				}},
					{ SCheckBox:{
						label:"Enable",
						description:"KSM lets the hypervisor system share identical memory pages amongst different processes or virtualized guests. This increases CPU consumption but improves memory.",
						default:'$KSM',
						action:"generic /sys/kernel/mm/ksm/run"
					}},'
					if [ -f "/sys/kernel/mm/ksm/deferred_timer" ]; then
					DT=\`$BB cat /sys/kernel/mm/ksm/deferred_timer\`
						$BB echo '{ SCheckBox:{
							label:"Deferred Timer",
							description:"If enabled, KSM thread will not wakeup CPU to carryout activities thus gaining battery while compromising slightly on memory that could have been saved.",
							default:'$DT',
							action:"generic /sys/kernel/mm/ksm/deferred_timer"
						}},'
					fi
					$BB echo '{ SSeekBar:{
						title:"Pages To Scan",
						unit:" pages",
						step:1,
						min:1,
						max:1024,
						default:'$PTS',
						action:"generic /sys/kernel/mm/ksm/pages_to_scan"
					}},
					{ SSeekBar:{
						title:"Scan Delay Interval",
						unit:" ms",
						step:50,
						min:50,
						max:3000,
						default:'$SLEEP',
						action:"generic /sys/kernel/mm/ksm/sleep_millisecs"
					}},'
			fi`
			`if [ -f "/sys/kernel/mm/uksm/run" ]; then
			UKSM=\`$BB cat /sys/kernel/mm/uksm/run\`
			SLEEP=\`$BB cat /sys/kernel/mm/uksm/sleep_millisecs\`
			UKSMGOV=\`$BB echo $(/res/synapse/actions/bracket-option /sys/kernel/mm/uksm/cpu_governor)\`
			MAXCPU=\`$BB cat /sys/kernel/mm/uksm/max_cpu_percentage\`
				$BB echo '{ SPane:{
					title:"Ultra Kernel Samepage Merging"
				}},
					{ SCheckBox:{
						label:"Enable",
						description:"UKSM lets the hypervisor system share identical memory pages amongst different processes or virtualized guests. UKSM has a better algorithm than KSM.",
						default:'$UKSM',
						action:"generic /sys/kernel/mm/uksm/run"
					}},
					{ SSeekBar:{
						title:"Sleep",
						description:"How long will the daemon sleep before it wakes up and starts scanning memory pages.",
						unit:" ms",
						step:100,
						min:0,
						max:3000,
						default:'$SLEEP',
						action:"generic /sys/kernel/mm/uksm/sleep_millisecs"
					}},
					{ SOptionList:{
						title:"CPU Governor",
						description:"Controls how aggressively the daemon uses CPU power. This sets a preset for the maximum CPU consumption below.",
						default:'$UKSMGOV',
						action:"bracket-option /sys/kernel/mm/uksm/cpu_governor",
						values:['
							for UGOV in \`$BB cat /sys/kernel/mm/uksm/cpu_governor | $BB sed -e "s/\]//;s/\[//"\`; do
								$BB echo "\"$UGOV\",";
							done;
						$BB echo '],
						notify:[
							{
								on:APPLY,
								do:[ REFRESH, APPLY ],
								to:"generic /sys/kernel/mm/uksm/max_cpu_percentage"
							},
						]
					}},
					{ SSeekBar:{
						title:"Max CPU Consumption",
						description:"The maximum CPU consumption the daemon will use while scanning. Higher = better scanning (more battery drain).",
						unit:"%",
						step:1,
						min:10,
						max:99,
						default:'$MAXCPU',
						action:"generic /sys/kernel/mm/uksm/max_cpu_percentage"
					}},'
			fi`
			`if [ -f "/sys/kernel/sched/gentle_fair_sleepers" ]; then
			GFS=\`$BB cat /sys/kernel/sched/gentle_fair_sleepers\`
			
				$BB echo '{ SPane:{
					title:"Gentle Fair Sleepers"
				}},
					{ SCheckBox:{
						label:"Enable",
						description:"Sleeper Fairness is a concept used by CFS which treat sleeping/waiting tasks as if they were in a run queue. This implies tasks which spend most of the time waiting for an user input and such will get a fair share of CPU when they need it. Disabling Gentle Fair Sleepers could improve UI responsiveness.",
						default:'$GFS',
						action:"generic /sys/kernel/sched/gentle_fair_sleepers"
					}},'
			fi`
			`if [ -f "/sys/kernel/sched/arch_power" ]; then
			APOWER=\`$BB cat /sys/kernel/sched/arch_power\`
				$BB echo '{ SPane:{
					title:"Arch Power"
				}},
					{ SCheckBox:{
						label:"Enable",
						description:"Arch Power uses arch dependent power functions to be used instead of generic high resolution timer ticks and double ticks to reflect the relative capacity of each core.",
						default:'$APOWER',
						action:"generic /sys/kernel/sched/arch_power"
					}},'
			fi`
		]
}
CTAG
